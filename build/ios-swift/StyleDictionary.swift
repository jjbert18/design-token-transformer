
//
// StyleDictionary.swift
//

// Do not edit directly
// Generated on Tue, 16 Nov 2021 21:26:47 GMT


import UIKit

public class StyleDictionary {
    public static let breakpointsL = 1440
    public static let breakpointsM = 1024
    public static let breakpointsS = 768
    public static let breakpointsXl = 1920
    public static let colorBackgroundDarkPrimary = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorBackgroundDarkSecondary = UIColor(red: 0.000, green: 0.184, blue: 0.333, alpha: 1)
    public static let colorBackgroundDarkTertiary = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorBackgroundGlyph = UIColor(red: 0.976, green: 0.573, blue: 0.133, alpha: 1)
    public static let colorBackgroundLightPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorBackgroundLightSecondary = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let colorBackgroundLightTertiary = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorBorderFocus = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 0.5)
    public static let colorBorderUtility = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorBrandPrimary = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1) /* swatch-blue */
    public static let colorBrandSecondary = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorBrandTertiary = UIColor(red: 0.000, green: 0.184, blue: 0.333, alpha: 1)
    public static let colorButtonAttentionBg = UIColor(red: 0.976, green: 0.573, blue: 0.133, alpha: 1)
    public static let colorButtonAttentionBgActive = UIColor(red: 0.690, green: 0.216, blue: 0.071, alpha: 1)
    public static let colorButtonAttentionBgDisabled = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonAttentionBgHover = UIColor(red: 0.820, green: 0.376, blue: 0.098, alpha: 1)
    public static let colorButtonAttentionText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonAttentionTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorButtonPrimaryAltBg = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryAltBgActive = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorButtonPrimaryAltBgDisabled = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonPrimaryAltBgHover = UIColor(red: 0.000, green: 0.420, blue: 0.816, alpha: 1)
    public static let colorButtonPrimaryAltOutlineHover = UIColor(red: 0.000, green: 0.184, blue: 0.333, alpha: 1)
    public static let colorButtonPrimaryAltText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryAltTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorButtonPrimaryBg = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorButtonPrimaryBgActive = UIColor(red: 0.000, green: 0.184, blue: 0.333, alpha: 1)
    public static let colorButtonPrimaryBgDisabled = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonPrimaryBgHover = UIColor(red: 0.000, green: 0.243, blue: 0.482, alpha: 1)
    public static let colorButtonPrimaryOutlineHover = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryReverseBg = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryReverseBgActive = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorButtonPrimaryReverseBgDisabled = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryReverseBgHover = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let colorButtonPrimaryReverseOutlineHover = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryReverseText = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorButtonPrimaryReverseTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorButtonPrimaryText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonPrimaryTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorButtonSecondaryAltBg = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let colorButtonSecondaryAltBgActive = UIColor(red: 0.000, green: 0.184, blue: 0.333, alpha: 1)
    public static let colorButtonSecondaryAltBgDisabled = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonSecondaryAltBgHover = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorButtonSecondaryAltBorder = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonSecondaryAltText = UIColor(red: 0.255, green: 0.294, blue: 0.314, alpha: 1)
    public static let colorButtonSecondaryAltTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorButtonSecondaryAltTextHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonSecondaryBg = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let colorButtonSecondaryBgActive = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonSecondaryBgDisabled = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorButtonSecondaryBgHover = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorButtonSecondaryBorder = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorButtonSecondaryText = UIColor(red: 0.255, green: 0.294, blue: 0.314, alpha: 1)
    public static let colorButtonSecondaryTextDisabled = UIColor(red: 0.498, green: 0.529, blue: 0.541, alpha: 1)
    public static let colorDepth = UIColor(red: 0.086, green: 0.090, blue: 0.094, alpha: 0.16)
    public static let colorInputBg = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorInputBgDisabled = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorInputBorderActive = UIColor(red: 0.000, green: 0.314, blue: 0.663, alpha: 1)
    public static let colorInputBorderDefault = UIColor(red: 0.718, green: 0.729, blue: 0.741, alpha: 1)
    public static let colorInputBorderDisabled = UIColor(red: 0.867, green: 0.878, blue: 0.886, alpha: 1)
    public static let colorPillPrimary = UIColor(red: 0.976, green: 0.573, blue: 0.133, alpha: 1)
    public static let colorPillSecondary = UIColor(red: 0.000, green: 0.549, blue: 1.000, alpha: 1)
    public static let colorPillTertiary = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let colorText = UIColor(red: 0.255, green: 0.294, blue: 0.314, alpha: 1)
    public static let colorUtilityAttention = UIColor(red: 0.976, green: 0.573, blue: 0.133, alpha: 1)
    public static let colorUtilityAttentionSubtle = UIColor(red: 1.000, green: 0.949, blue: 0.925, alpha: 1)
    public static let colorUtilityNegative = UIColor(red: 0.882, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorUtilityNegativeSubtle = UIColor(red: 1.000, green: 0.925, blue: 0.925, alpha: 1)
    public static let colorUtilityPositive = UIColor(red: 0.282, green: 0.741, blue: 0.000, alpha: 1)
    public static let colorUtilityPositiveSubtle = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let effectShadowCardCardColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowCardCardHoverColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowCardCardHoverOffsetX = 0
    public static let effectShadowCardCardHoverOffsetY = 4
    public static let effectShadowCardCardHoverRadius = 16
    public static let effectShadowCardCardHoverSpread = 1
    public static let effectShadowCardCardHoverType = dropShadow
    public static let effectShadowCardCardOffsetX = 0
    public static let effectShadowCardCardOffsetY = 2
    public static let effectShadowCardCardRadius = 8
    public static let effectShadowCardCardSpread = 1
    public static let effectShadowCardCardType = dropShadow
    public static let effectShadowFocusFocusColor = rgba(0, 140, 225, 1)
    public static let effectShadowFocusFocusOffsetX = 0
    public static let effectShadowFocusFocusOffsetY = 0
    public static let effectShadowFocusFocusRadius = 4
    public static let effectShadowFocusFocusSpread = 0
    public static let effectShadowFocusFocusType = dropShadow
    public static let effectShadowGeneralNavColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowGeneralNavOffsetX = 0
    public static let effectShadowGeneralNavOffsetY = 1
    public static let effectShadowGeneralNavRadius = 3
    public static let effectShadowGeneralNavSpread = 0
    public static let effectShadowGeneralNavType = dropShadow
    public static let effectShadowGeneralOneColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowGeneralOneOffsetX = 0
    public static let effectShadowGeneralOneOffsetY = 2
    public static let effectShadowGeneralOneRadius = 4
    public static let effectShadowGeneralOneSpread = 0
    public static let effectShadowGeneralOneType = dropShadow
    public static let effectShadowGeneralThreeColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowGeneralThreeOffsetX = 0
    public static let effectShadowGeneralThreeOffsetY = 8
    public static let effectShadowGeneralThreeRadius = 24
    public static let effectShadowGeneralThreeSpread = 0
    public static let effectShadowGeneralThreeType = dropShadow
    public static let effectShadowGeneralTwoColor = rgba(22, 23, 24, 0.16)
    public static let effectShadowGeneralTwoOffsetX = 0
    public static let effectShadowGeneralTwoOffsetY = 4
    public static let effectShadowGeneralTwoRadius = 12
    public static let effectShadowGeneralTwoSpread = 0
    public static let effectShadowGeneralTwoType = dropShadow
    public static let fontBodyRegularFontFamily = "Helvetica Neue"
    public static let fontBodyRegularFontSize = "14"
    public static let fontBodyRegularFontStretch = "normal"
    public static let fontBodyRegularFontStyle = "normal"
    public static let fontBodyRegularFontStyleOld = "Regular"
    public static let fontBodyRegularFontWeight = "400"
    public static let fontBodyRegularLetterSpacing = "0"
    public static let fontBodyRegularLineHeight = "20"
    public static let fontBodyRegularParagraphIndent = "0"
    public static let fontBodyRegularParagraphSpacing = "0"
    public static let fontBodyRegularTextCase = "none"
    public static let fontBodyRegularTextDecoration = "none"
    public static let fontBodyRegularUnderlineFontFamily = "Helvetica Neue"
    public static let fontBodyRegularUnderlineFontSize = "14"
    public static let fontBodyRegularUnderlineFontStretch = "normal"
    public static let fontBodyRegularUnderlineFontStyle = "normal"
    public static let fontBodyRegularUnderlineFontStyleOld = "Regular"
    public static let fontBodyRegularUnderlineFontWeight = "400"
    public static let fontBodyRegularUnderlineLetterSpacing = "0"
    public static let fontBodyRegularUnderlineLineHeight = "20"
    public static let fontBodyRegularUnderlineParagraphIndent = "0"
    public static let fontBodyRegularUnderlineParagraphSpacing = "0"
    public static let fontBodyRegularUnderlineTextCase = "none"
    public static let fontBodyRegularUnderlineTextDecoration = "underline"
    public static let fontBodyXsFontFamily = "Helvetica Neue"
    public static let fontBodyXsFontSize = "10"
    public static let fontBodyXsFontStretch = "normal"
    public static let fontBodyXsFontStyle = "normal"
    public static let fontBodyXsFontStyleOld = "Regular"
    public static let fontBodyXsFontWeight = "400"
    public static let fontBodyXsLetterSpacing = "0"
    public static let fontBodyXsLineHeight = "20"
    public static let fontBodyXsParagraphIndent = "0"
    public static let fontBodyXsParagraphSpacing = "0"
    public static let fontBodyXsTextCase = "none"
    public static let fontBodyXsTextDecoration = "none"
    public static let fontBodyXxsFontFamily = "Helvetica Neue"
    public static let fontBodyXxsFontSize = "8"
    public static let fontBodyXxsFontStretch = "normal"
    public static let fontBodyXxsFontStyle = "normal"
    public static let fontBodyXxsFontStyleOld = "Regular"
    public static let fontBodyXxsFontWeight = "400"
    public static let fontBodyXxsLetterSpacing = "0"
    public static let fontBodyXxsLineHeight = "16"
    public static let fontBodyXxsParagraphIndent = "0"
    public static let fontBodyXxsParagraphSpacing = "0"
    public static let fontBodyXxsTextCase = "none"
    public static let fontBodyXxsTextDecoration = "none"
    public static let fontDisplay1BoldFontFamily = "Helvetica Neue"
    public static let fontDisplay1BoldFontSize = "44"
    public static let fontDisplay1BoldFontStretch = "normal"
    public static let fontDisplay1BoldFontStyle = "normal"
    public static let fontDisplay1BoldFontStyleOld = "Bold"
    public static let fontDisplay1BoldFontWeight = "700"
    public static let fontDisplay1BoldLetterSpacing = "0"
    public static let fontDisplay1BoldLineHeight = "47.96"
    public static let fontDisplay1BoldParagraphIndent = "0"
    public static let fontDisplay1BoldParagraphSpacing = "0"
    public static let fontDisplay1BoldTextCase = "none"
    public static let fontDisplay1BoldTextDecoration = "none"
    public static let fontDisplay1RegularFontFamily = "Helvetica Neue"
    public static let fontDisplay1RegularFontSize = "44"
    public static let fontDisplay1RegularFontStretch = "normal"
    public static let fontDisplay1RegularFontStyle = "normal"
    public static let fontDisplay1RegularFontStyleOld = "Regular"
    public static let fontDisplay1RegularFontWeight = "400"
    public static let fontDisplay1RegularLetterSpacing = "0"
    public static let fontDisplay1RegularLineHeight = "47.96"
    public static let fontDisplay1RegularParagraphIndent = "0"
    public static let fontDisplay1RegularParagraphSpacing = "0"
    public static let fontDisplay1RegularTextCase = "none"
    public static let fontDisplay1RegularTextDecoration = "none"
    public static let fontDisplay2BoldFontFamily = "Helvetica Neue"
    public static let fontDisplay2BoldFontSize = "36"
    public static let fontDisplay2BoldFontStretch = "normal"
    public static let fontDisplay2BoldFontStyle = "normal"
    public static let fontDisplay2BoldFontStyleOld = "Bold"
    public static let fontDisplay2BoldFontWeight = "700"
    public static let fontDisplay2BoldLetterSpacing = "0"
    public static let fontDisplay2BoldLineHeight = "40"
    public static let fontDisplay2BoldParagraphIndent = "0"
    public static let fontDisplay2BoldParagraphSpacing = "0"
    public static let fontDisplay2BoldTextCase = "none"
    public static let fontDisplay2BoldTextDecoration = "none"
    public static let fontDisplay2RegularFontFamily = "Helvetica Neue"
    public static let fontDisplay2RegularFontSize = "36"
    public static let fontDisplay2RegularFontStretch = "normal"
    public static let fontDisplay2RegularFontStyle = "normal"
    public static let fontDisplay2RegularFontStyleOld = "Regular"
    public static let fontDisplay2RegularFontWeight = "400"
    public static let fontDisplay2RegularLetterSpacing = "0"
    public static let fontDisplay2RegularLineHeight = "40"
    public static let fontDisplay2RegularParagraphIndent = "0"
    public static let fontDisplay2RegularParagraphSpacing = "0"
    public static let fontDisplay2RegularTextCase = "none"
    public static let fontDisplay2RegularTextDecoration = "none"
    public static let fontHeading2FontFamily = "Helvetica Neue"
    public static let fontHeading2FontSize = "22"
    public static let fontHeading2FontStretch = "normal"
    public static let fontHeading2FontStyle = "normal"
    public static let fontHeading2FontStyleOld = "Bold"
    public static let fontHeading2FontWeight = "700"
    public static let fontHeading2LetterSpacing = "0"
    public static let fontHeading2LineHeight = "24"
    public static let fontHeading2ParagraphIndent = "0"
    public static let fontHeading2ParagraphSpacing = "0"
    public static let fontHeading2TextCase = "none"
    public static let fontHeading2TextDecoration = "none"
    public static let fontHeading3FontFamily = "Helvetica Neue"
    public static let fontHeading3FontSize = "18"
    public static let fontHeading3FontStretch = "normal"
    public static let fontHeading3FontStyle = "normal"
    public static let fontHeading3FontStyleOld = "Bold"
    public static let fontHeading3FontWeight = "700"
    public static let fontHeading3LetterSpacing = "0"
    public static let fontHeading3LineHeight = "24"
    public static let fontHeading3ParagraphIndent = "0"
    public static let fontHeading3ParagraphSpacing = "0"
    public static let fontHeading3TextCase = "none"
    public static let fontHeading3TextDecoration = "none"
    public static let fontHeading4FontFamily = "Helvetica Neue"
    public static let fontHeading4FontSize = "16"
    public static let fontHeading4FontStretch = "normal"
    public static let fontHeading4FontStyle = "normal"
    public static let fontHeading4FontStyleOld = "Bold"
    public static let fontHeading4FontWeight = "700"
    public static let fontHeading4LetterSpacing = "0"
    public static let fontHeading4LineHeight = "20"
    public static let fontHeading4ParagraphIndent = "0"
    public static let fontHeading4ParagraphSpacing = "0"
    public static let fontHeading4TextCase = "none"
    public static let fontHeading4TextDecoration = "none"
    public static let fontHeading5FontFamily = "Helvetica Neue"
    public static let fontHeading5FontSize = "14"
    public static let fontHeading5FontStretch = "normal"
    public static let fontHeading5FontStyle = "normal"
    public static let fontHeading5FontStyleOld = "Bold"
    public static let fontHeading5FontWeight = "700"
    public static let fontHeading5LetterSpacing = "0"
    public static let fontHeading5LineHeight = "20"
    public static let fontHeading5ParagraphIndent = "0"
    public static let fontHeading5ParagraphSpacing = "0"
    public static let fontHeading5TextCase = "none"
    public static let fontHeading5TextDecoration = "none"
    public static let fontHeading5UnderlineFontFamily = "Helvetica Neue"
    public static let fontHeading5UnderlineFontSize = "14"
    public static let fontHeading5UnderlineFontStretch = "normal"
    public static let fontHeading5UnderlineFontStyle = "normal"
    public static let fontHeading5UnderlineFontStyleOld = "Bold"
    public static let fontHeading5UnderlineFontWeight = "700"
    public static let fontHeading5UnderlineLetterSpacing = "0"
    public static let fontHeading5UnderlineLineHeight = "20"
    public static let fontHeading5UnderlineParagraphIndent = "0"
    public static let fontHeading5UnderlineParagraphSpacing = "0"
    public static let fontHeading5UnderlineTextCase = "none"
    public static let fontHeading5UnderlineTextDecoration = "underline"
    public static let fontHeading6FontFamily = "Helvetica Neue"
    public static let fontHeading6FontSize = "12"
    public static let fontHeading6FontStretch = "normal"
    public static let fontHeading6FontStyle = "normal"
    public static let fontHeading6FontStyleOld = "Bold"
    public static let fontHeading6FontWeight = "700"
    public static let fontHeading6LetterSpacing = "0"
    public static let fontHeading6LineHeight = "16"
    public static let fontHeading6ParagraphIndent = "0"
    public static let fontHeading6ParagraphSpacing = "0"
    public static let fontHeading6TextCase = "none"
    public static let fontHeading6TextDecoration = "none"
    public static let fontHeading6UnderlineFontFamily = "Helvetica Neue"
    public static let fontHeading6UnderlineFontSize = "12"
    public static let fontHeading6UnderlineFontStretch = "normal"
    public static let fontHeading6UnderlineFontStyle = "normal"
    public static let fontHeading6UnderlineFontStyleOld = "Bold"
    public static let fontHeading6UnderlineFontWeight = "700"
    public static let fontHeading6UnderlineLetterSpacing = "0"
    public static let fontHeading6UnderlineLineHeight = "20"
    public static let fontHeading6UnderlineParagraphIndent = "0"
    public static let fontHeading6UnderlineParagraphSpacing = "0"
    public static let fontHeading6UnderlineTextCase = "none"
    public static let fontHeading6UnderlineTextDecoration = "underline"
    public static let fontHeadingH1FontFamily = "Helvetica Neue"
    public static let fontHeadingH1FontSize = "28"
    public static let fontHeadingH1FontStretch = "normal"
    public static let fontHeadingH1FontStyle = "normal"
    public static let fontHeadingH1FontStyleOld = "Bold"
    public static let fontHeadingH1FontWeight = "700"
    public static let fontHeadingH1LetterSpacing = "0"
    public static let fontHeadingH1LineHeight = "36"
    public static let fontHeadingH1ParagraphIndent = "0"
    public static let fontHeadingH1ParagraphSpacing = "0"
    public static let fontHeadingH1TextCase = "none"
    public static let fontHeadingH1TextDecoration = "none"
    public static let fontHeadingH6RegularFontFamily = "Helvetica Neue"
    public static let fontHeadingH6RegularFontSize = "12"
    public static let fontHeadingH6RegularFontStretch = "normal"
    public static let fontHeadingH6RegularFontStyle = "normal"
    public static let fontHeadingH6RegularFontStyleOld = "Regular"
    public static let fontHeadingH6RegularFontWeight = "400"
    public static let fontHeadingH6RegularLetterSpacing = "0"
    public static let fontHeadingH6RegularLineHeight = "16"
    public static let fontHeadingH6RegularParagraphIndent = "0"
    public static let fontHeadingH6RegularParagraphSpacing = "0"
    public static let fontHeadingH6RegularTextCase = "none"
    public static let fontHeadingH6RegularTextDecoration = "none"
    public static let fontHeadingXsFontFamily = "Helvetica Neue"
    public static let fontHeadingXsFontSize = "10"
    public static let fontHeadingXsFontStretch = "normal"
    public static let fontHeadingXsFontStyle = "normal"
    public static let fontHeadingXsFontStyleOld = "Bold"
    public static let fontHeadingXsFontWeight = "700"
    public static let fontHeadingXsLetterSpacing = "0"
    public static let fontHeadingXsLineHeight = "20"
    public static let fontHeadingXsParagraphIndent = "0"
    public static let fontHeadingXsParagraphSpacing = "0"
    public static let fontHeadingXsTextCase = "none"
    public static let fontHeadingXsTextDecoration = "none"
    public static let fontHeadingXsUnderlineFontFamily = "Helvetica Neue"
    public static let fontHeadingXsUnderlineFontSize = "10"
    public static let fontHeadingXsUnderlineFontStretch = "normal"
    public static let fontHeadingXsUnderlineFontStyle = "normal"
    public static let fontHeadingXsUnderlineFontStyleOld = "Bold"
    public static let fontHeadingXsUnderlineFontWeight = "700"
    public static let fontHeadingXsUnderlineLetterSpacing = "0"
    public static let fontHeadingXsUnderlineLineHeight = "20"
    public static let fontHeadingXsUnderlineParagraphIndent = "0"
    public static let fontHeadingXsUnderlineParagraphSpacing = "0"
    public static let fontHeadingXsUnderlineTextCase = "none"
    public static let fontHeadingXsUnderlineTextDecoration = "underline"
    public static let fontHeadingXxsFontFamily = "Helvetica Neue"
    public static let fontHeadingXxsFontSize = "8"
    public static let fontHeadingXxsFontStretch = "normal"
    public static let fontHeadingXxsFontStyle = "normal"
    public static let fontHeadingXxsFontStyleOld = "Bold"
    public static let fontHeadingXxsFontWeight = "700"
    public static let fontHeadingXxsLetterSpacing = "0"
    public static let fontHeadingXxsLineHeight = "16"
    public static let fontHeadingXxsParagraphIndent = "0"
    public static let fontHeadingXxsParagraphSpacing = "0"
    public static let fontHeadingXxsTextCase = "none"
    public static let fontHeadingXxsTextDecoration = "none"
    public static let sizesGapA = 4 /* Option for gap size */
    public static let sizesGapB = 8 /* Option for gap size */
    public static let sizesGapC = 16 /* Option for gap size */
    public static let sizesGapD = 24 /* Option for gap size */
    public static let sizesGapE = 32 /* Option for gap size */
    public static let sizesGapF = 64 /* Option for gap size */
    public static let sizesGapG = 96 /* Option for gap size */
    public static let sizesIconLarge = 32 /* Option for icon size */
    public static let sizesIconRegular = 24 /* Option for icon size */
    public static let sizesIconSmall = 20 /* Option for icon size */
    public static let sizesIconXlarge = 40 /* Option for icon size */
    public static let sizesIconXsmall = 16 /* Option for icon size */
    public static let sizesIconXxlarge = 52 /* Option for icon size */
    public static let sizesIconXxsmall = 12 /* Option for icon size */
    public static let sizesVerticalRhythmLarge = 72 /* Option for vertical rhythm space */
    public static let sizesVerticalRhythmSmall = 40 /* Option for vertical rhythm space */
}
